
from flask import Flask , render_template , request , redirect, flash

import keras
import tensorflow as tf
import numpy as np
from keras.models import load_model
from werkzeug.utils import secure_filename
import os

UPLOAD_FOLDER = 'static/images/'

class_names=['Adialer.C','Agent.FYI','Allaple.A','Allaple.L','Alueron.gen!J','Autorun.K',
              'C2LOP.P','C2LOP.gen!g','Dialplatform.B','Dontovo.A',
              'Fakerean','Instantaccess','Lolyda.AA1','Lolyda.AA2','Lolyda.AA3','Lolyda.AT',
              'Malex.gen!J','Obfuscator.AD','Rbot!gen','Skintrim.N',
              'Swizzor.gen!E','Swizzor.gen!I','VB.AT','Wintrim.BX','Yuner.A']

model=load_model("Best_Model\Best_Model.h5")

app = Flask(__name__,static_folder="static")

app.secret_key = "secret key"

#Define the upload folder to save images uploaded by the user. 
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER


@app.route('/', methods=['GET'])
def index():
  return(render_template("index.html"))

#allow the user to upload an image
@app.route("/", methods=['POST'])

def predict():
  
  if 'imagefile' not in request.files:
    flash('No file part')
    return redirect(request.url)
  imagefile = request.files['imagefile']

  if imagefile.filename == '':
    flash('No file selected for uploading')
    return redirect(request.url)
  if imagefile:
    filename = secure_filename(imagefile.filename)  #Use this werkzeug method to secure filename. 
    imagefile.save(os.path.join(app.config['UPLOAD_FOLDER'],filename))
    img_path = 'static/images/'+filename

    img= keras.utils.load_img(img_path, target_size=(150, 150))
    
    img_tensor = keras.utils.img_to_array(img)                    
    img_tensor = np.expand_dims(img_tensor, axis=0)        
                                          
    pred=model.predict(img_tensor)
    
    classe=class_names[np.argmax(pred)]
    score=np.amax(pred)
    classification = f"{classe} ({score})"
    flash(classification)
    full_filename = os.path.join(app.config['UPLOAD_FOLDER'], filename)
    flash(full_filename)
  
  return(redirect('/'))

  

if __name__ == '__main__' :
  app.run(port=3000,debug=True)
